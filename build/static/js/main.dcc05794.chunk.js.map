{"version":3,"sources":["services/persons.js","PersonForm.js","Persons.js","Filter.js","Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","PersonForm","newName","newPhoneNumber","handleNewNumber","setNewName","setNewPhoneNumber","onSubmit","value","onChange","e","target","type","Persons","persons","nameFilter","handleDelete","filter","person","name","toLowerCase","includes","map","index","key","number","onClick","Filter","setNameFilter","Notification","notification","className","msg","App","useState","setPersons","setNotification","useEffect","personService","findId","checkIfPersonExists","handleNotification","setTimeout","preventDefault","window","confirm","newPersons","catch","error","message","result","concat","personToBeDeleted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dcc05794.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, update, deletePerson };\n","import React from \"react\";\n\nexport const PersonForm = ({\n  newName,\n  newPhoneNumber,\n  handleNewNumber,\n  setNewName,\n  setNewPhoneNumber,\n}) => (\n  <form onSubmit={handleNewNumber}>\n    <div>\n      name:\n      <input value={newName} onChange={(e) => setNewName(e.target.value)} />\n    </div>\n    <div>\n      number:\n      <input\n        value={newPhoneNumber}\n        onChange={(e) => setNewPhoneNumber(e.target.value)}\n      />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n);\n","import React from \"react\";\n\nexport const Persons = ({ persons, nameFilter, handleDelete }) => (\n  <div>\n    {persons\n      .filter((person) =>\n        person.name.toLowerCase().includes(nameFilter.toLowerCase())\n      )\n      .map((person, index) => (\n        <p key={index}>\n          {person.name} {person.number}\n          <button onClick={() => handleDelete(person)}>delete</button>\n        </p>\n      ))}\n  </div>\n);\n","import React from \"react\";\n\nexport const Filter = ({ nameFilter, setNameFilter }) => (\n  <div>\n    filter shown with\n    <input value={nameFilter} onChange={(e) => setNameFilter(e.target.value)} />\n  </div>\n);\n","import React from \"react\";\nimport \"./index.css\";\n\nexport const Notification = ({ notification }) => {\n  if (notification === null) return null;\n  return (\n    <div\n      className={\n        notification.type === \"success\" ? \"success-msg-box\" : \"error-msg-box\"\n      }\n    >\n      <h3>{notification.msg}</h3>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\n\n//componenets\nimport { PersonForm } from \"./PersonForm\";\nimport { Persons } from \"./Persons\";\nimport { Filter } from \"./Filter\";\nimport { Notification } from \"./Notification\";\n\nexport const App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newPhoneNumber, setNewPhoneNumber] = useState(\"\");\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then((response) => setPersons(response));\n  }, []);\n\n  const handleNewNumber = (e) => {\n    e.preventDefault();\n    if (checkIfPersonExists()) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        personService\n          .update(findId(), { name: newName, number: newPhoneNumber })\n          .then(() => {\n            const newPersons = [...persons];\n            for (let person of newPersons) {\n              if (person.name === newName) person.number = newPhoneNumber;\n            }\n            setPersons(newPersons);\n            handleNotification({ type: \"success\", msg: `Updated ${newName}` });\n            setNewName(\"\");\n            setNewPhoneNumber(\"\");\n            return;\n          })\n          .catch((e) => {\n            handleNotification({\n              type: \"error\",\n              msg: e.response.data.error.message,\n            });\n          });\n      }\n      return;\n    }\n    personService\n      .create({ name: newName, number: newPhoneNumber })\n      .then((result) => {\n        setPersons(\n          persons.concat({\n            name: newName,\n            number: newPhoneNumber,\n            id: result.id ? result.id : null, //getting new id from the backend, should probably get the whole thing and not just id\n          })\n        );\n        handleNotification({ type: \"success\", msg: `Added ${newName}` });\n        setNewName(\"\");\n        setNewPhoneNumber(\"\");\n      })\n      .catch((e) =>\n        handleNotification({\n          type: \"error\",\n          msg: e.response.data.error.message,\n        })\n      );\n  };\n\n  const handleDelete = (personToBeDeleted) => {\n    if (window.confirm(`Delete ${personToBeDeleted.name}?`))\n      personService\n        .deletePerson(personToBeDeleted.id)\n        .then(() => {\n          const newPersons = persons.filter(\n            (person) => person.id !== personToBeDeleted.id\n          );\n          setPersons(newPersons);\n          handleNotification({\n            type: \"success\",\n            msg: `Succesfully deleted ${newName}`,\n          });\n        })\n        .catch((e) =>\n          handleNotification({\n            type: \"error\",\n            msg: e.response.data.error.message,\n          })\n        );\n  };\n\n  const findId = () => {\n    for (let person of persons) {\n      if (person.name === newName) return person.id;\n    }\n  };\n\n  const checkIfPersonExists = () => {\n    for (let person of persons) {\n      if (person.name === newName) return true;\n    }\n    return false;\n  };\n\n  const handleNotification = ({ type, msg }) => {\n    setNotification({ type: type, msg: msg });\n    setTimeout(() => setNotification(null), 2000);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter nameFilter={nameFilter} setNameFilter={setNameFilter} />\n      <h2>add a new</h2>\n      <PersonForm\n        newName={newName}\n        newPhoneNumber={newPhoneNumber}\n        handleNewNumber={handleNewNumber}\n        setNewName={setNewName}\n        setNewPhoneNumber={setNewPhoneNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        nameFilter={nameFilter}\n        handleDelete={handleDelete}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}